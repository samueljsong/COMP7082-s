generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model image {
  image_id      Int            @id @default(autoincrement())
  cloudinary_id String         @db.VarChar(500)
  report_image  report_image[]
}

model location_tag {
  location_tag_id Int      @id @default(autoincrement())
  room            Int
  building        String   @db.VarChar(45)
  report          report[]
}

model report {
  report_id       Int            @id @default(autoincrement())
  title           String         @db.VarChar(100)
  description     String         @db.Text
  date_submitted  DateTime       @db.DateTime(0)
  location_tag_id Int
  status_id       Int            @default(1)
  user_id         Int
  location_tag    location_tag   @relation(fields: [location_tag_id], references: [location_tag_id], onDelete: NoAction, onUpdate: NoAction, map: "report_location_tag")
  status          status         @relation(fields: [status_id], references: [status_id], onDelete: NoAction, onUpdate: NoAction, map: "report_status")
  user            user           @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "report_user")
  report_image    report_image[]

  @@index([location_tag_id], map: "report_location_tag_idx")
  @@index([status_id], map: "report_status_idx")
  @@index([user_id], map: "report_user_idx")
}

model report_image {
  report_image_id Int    @id @default(autoincrement())
  report_id       Int
  image_id        Int
  image           image  @relation(fields: [image_id], references: [image_id], onDelete: NoAction, onUpdate: NoAction, map: "report_image_image")
  report          report @relation(fields: [report_id], references: [report_id], onDelete: NoAction, onUpdate: NoAction, map: "report_image_report")

  @@index([image_id], map: "report_image_image_idx")
  @@index([report_id], map: "report_image_report_idx")
}

model status {
  status_id   Int      @id @default(autoincrement())
  status_type String   @db.VarChar(45)
  report      report[]
}

model user {
  user_id         Int       @id @default(autoincrement())
  email           String    @unique(map: "email_UNIQUE") @db.VarChar(100)
  first_name      String    @default("") @db.VarChar(100)
  last_name       String    @default("") @db.VarChar(100)
  hashed_password String    @db.VarChar(100)
  user_type_id    Int       @default(1)
  report          report[]
  user_type       user_type @relation(fields: [user_type_id], references: [user_type_id], onDelete: NoAction, onUpdate: NoAction, map: "user_user_type")

  @@index([user_type_id], map: "user_user_type_idx")
}

model user_type {
  user_type_id Int    @id @default(autoincrement())
  type         String @unique(map: "type_UNIQUE") @db.VarChar(45)
  user         user[]
}
